1.根据爬虫名称找对应方法，实现类似多态的效果。
	说明：爬虫全部放在一个数据库中，当调用运行方法的时候，需要用到多态。基类通过爬虫名称找到子类中的方法进行调用。爬虫行为在子类中进行定义。
2.开启爬虫任务的时机。
	说明：什么时候开启爬虫，在哪里写代码。代码怎么写。
3.项目扩展说明：
	1>创建APP的名称、爬虫子类的名称与爬虫名字段相同
	2>在models中写爬虫数据，在爬虫类中操作数据模型
	3>在admin界面中，对爬虫名字段的维护应该通过对现有类的单选按钮来实现，不能手动填写
	4>在__init__.py文件中添加代码，注册爬虫名
4.在管理界面对爬虫名进行选择
	动态维护说明：在爬虫APP模块的__init__.py文件中添加代码向爬虫仓库注册爬虫名。在统一调用爬虫执行逻辑的时候按照注册的名字去查找对应的方法。
